const risks = [
    'NO NOT USE INDEX 0',
    'Information (1)',
    'Low (2)',
    'Medium (3)',
    'High (4)',
    'Critical (5)'
]

const colors = [
    'NO NOT USE INDEX 0',
    'gray',
    'risklevellow',
    'risklevelmedium',
    'risklevelhigh',
    'risklevelcritical',
]

const START_AT = 1

const findings = [
    {
        "head": "Unencrypted Web Traffic",
        "desc": "The traffic between client and server on TCP4 and TCP6 port `80` is unencrypted and can be sniffed by an attacker.",
        "risk": 3
    },
    {
        "head": "SSH Standard Port",
        "desc": "The SSH server is listening on the default port `22` which makes a script kiddie easier to brute force.",
        "risk": 1
    },
    {
        "head": "Different IPv4 and IPv6 Firewall Rulesets",
        "desc": "The IPv4 and IPv6 firewall rulesets are different. This makes it hard to maintain.",
        "risk": 2
    },
    {
        "head": "Directory Listing",
        "desc": "The Apache2 web server has the standard directory listing enabled. This makes it easy for attacker to check the files containing in the web servers root folder. Further the users home directory names are publicly visible.",
        "risk": 3
    },
    {
        "head": "Weak Passwords",
        "desc": "There are users on the server with weak passwords. For example the password of user `bluey` is crackable in around 10 seconds.",
        "risk": 4
    },
    {
        "head": "Certificate and Key Timestamps",
        "desc": "There are certificates and keys on the server where the key is modified more than one and a half year after the certificate itself. However, the key and the certificate fit together.",
        "risk": 1
    },
    {
        "head": "Weak Certificates",
        "desc": "There are multiple weak certificates using `sha1WithRSAEncryption` which is inherently insecure. Furthermore, the public key has a length of 2048 bit which currently is the recommended minimum legth.",
        "risk": 4
    },
    {
        "head": "Root Certificates",
        "desc": "There are multiple CA root certificates on the server.",
        "risk": 3
    },
    {
        "head": "sudoers File Permissions",
        "desc": "Instead of the default permissions (`440`) the file has a permission of `644` which means that the file is world readable to every user on the system. Due the Dirty Pipe vulnerability every user on the system can append text to the `sudoers` file.",
        "risk": 5
    },
    {
        "head": "sudoers File Configuration",
        "desc": "The user `bluey` is allowed to use the `less` command with root privileges without any password against the `/var/log/auth.log` file. Since `less` is an interactive command line tool the user is able to execute subprocesses or open restricted files.",
        "risk": 5
    },
    {
        "head": "Unusual Files",
        "desc": "A few unusual files we found in the root directory include the `.screenrc` and the `.inputrc` which are not created by default. Further interesting files were the `.config/ marco-compton.conf`, the `.config/mpv/mpv.conf` and the `.xmodmaprc` which are used to configure a graphical environment and video player respectively. However, there is no graphical environment installed on the machine.",
        "risk": 1
    },
    {
        "head": "Root SSH Key",
        "desc": "The root user can log into the system using his own SSH key. This is not considered as a best practice because if the private user is only present for the root user and does not exist for any other user on any other machine it is useless to access a machine via SSH he already has shell access to. And if the private key is copied from another machine or another user, this is a bad practice as a private key should only be accessible to a single user at a single host.",
        "risk": 1
    },
    {
        "head": "Deactivated Accounts with SSH Access",
        "desc": "There are users on the server which are deactivated for login with a password. This does not mean that the user can not log into the system. There is a valid SSH key for user `bingo` which allows him to log in as root user.",
        "risk": 5
    },
    {
        "head": "Missing Debian apt Repos",
        "desc": "There are missing Debian apt repos on the system. The `/etc/apt/sources.list` only contains one single repo. This means that there are no security updates for vulnerable software available.",
        "risk": 5
    },
    {
        "head": "Missing Server Security Updates",
        "desc": "The server is missing a lot of security updates which fixes many vulnerabilities.",
        "risk": 5
    },
    {
        "head": "Missing Software Security Updates",
        "desc": "There are updates available for many software packages on the server that fix critical vulnerabilities.",
        "risk": 5
    }, {
        "head": "Improper Systemd Service permissions",
        "desc": "Some systemd services have their permissions set to `600` which is non-standard.",
        "risk": 1,
    }, {
        "head": "SSH brute-force",
        "desc": "The SSH `MaxAuthRetries` option is set to `100000` which allows for password brute-forcing.",
        "risk": 4,
    }, {
        "head": "SSH root login",
        "desc": "SSH login is not disabled for the root user.",
        "risk": 1,
    }, {
        "head": "SSH password authentication",
        "desc": "Password authentication is enabled for the SSH server, but key authentication should be enforced.",
        "risk": 2,
    }, {
        "head": "Fail2ban is not installed",
        "desc": "Fail2ban is not installed and configured for the SSH server.",
        "risk": 1,
    }, {
        "head": "Apache has no TLS support",
        "desc": "Neither the `mod_ssl` nor the `mod_gnutls` module are enabled for `apache2`.",
        "risk": 3,
    }, {
        "head": "Apache directory listing",
        "desc": "The default Apache directory listing is exposing the names of the users on the server.",
        "risk": 3,
    }, {
        "head": "Weak certificate",
        "desc": "The certificate used by the `drsfowp` service uses a weak signature algorithm.",
        "risk": 3,
    }, {
        "head": "Eposed CA-Certificare",
        "desc": "The `drsfowp` service publicly presents its CA-Certificate.",
        "risk": 4,
    }, {
        "head": "Webserver exposes directory",
        "desc": "The `/etc/` directory is exposed by the `drsfowp` service on port 443.",
        "risk": 5,
    }, {
        "head": "Management Server uses weak certificate",
        "desc": "The certificate used by the 'Secure management server' uses a weak signature algorithm.",
        "risk": 3,
    }, {
        "head": "Management Server exposes CA-certificate",
        "desc": "The 'Secure management server' publicly presents its CA-Certificate.",
        "risk": 4,
    }, {
        "head": "Management Server does not validate certificates",
        "desc": "The 'Secure management server' does not validate certificates.",
        "risk": 5,
    }, {
        "head": "Instant root shell",
        "desc": "The 'Secure management server' provides an interactive root shell that can be opened from anywhere.",
        "risk": 5,
    }, {
        "head": "Socat exposes the OpenSSL server",
        "desc": "The `socat` tool is used to expose the OpenSSL server which itself exposes the `/etc` directory.",
        "risk": 5,
    }, {
        "head": "Weak password hashing algorithm",
        "desc": "The password of user bluey is using a weak hashing algorithm.",
        "risk": 4,
    }, {
        "head": "Suspicious snakeoil certificate",
        "desc": "The snakeoil certificate used for unattented package installation is not the default Debian one but instead a custom certificate.",
        "risk": 4,
    }, {
        "head": "Improper hostname resolution",
        "desc": "The hostname of the server cannot be resolved.",
        "risk": 1,
    }, {
        "head": "JBIN Collection (-e^(i * pi))",
        "desc": "The `jbin` collection is installed on the system.",
        "risk": 1,
    }, {
        "head": "NSA Heartbeat binary",
        "desc": "A binary named `heartbeat` which is talking to the NSA servers is present on the server. It is never executed.",
        "risk": 1,
    }, {
        "head": "NSA Firmware Update binary",
        "desc": "A binary named `firmware_update` which is talking to the NSA servers is present on the server. It is never executed.",
        "risk": 1,
    }, {
        "head": "Legacy OpenSSL",
        "desc": "A legacy, 10 year old OpenSSL version is installed on the system.",
        "risk": 5,
    }, {
        "head": "Outdated OpenSSL config",
        "desc": "The legacy OpenSSL version installed on the system uses a suboptimal configuration.",
        "risk": 4,
    }, {
        "head": "Heartbleed",
        "desc": "The legacy OpenSSL version installed on the system is affected by the heartbleed vulnerability.",
        "risk": 5,
    }, {
        "head": "Legacy OpenSSL has SSL enabled",
        "desc": "The legacy OpenSSL version installed on the system has SSL protocols enabled.",
        "risk": 5,
    }, {
        "head": "Legacy OpenSSL uses outdated TLS version",
        "desc": "The legacy OpenSSL version installed on the system is using outdated TLS versions.",
        "risk": 4,
    }, {
        "head": "Legacy OpenSSL ciphers",
        "desc": "The legacy OpenSSL version installed on the system is using outdated ciphers.",
        "risk": 4,
    }, {
        "head": "Legacy OpenSSL key exchange groups",
        "desc": "The legacy OpenSSL version installed on the system is using a key exchange groups that is reasonable, but could be improved.",
        "risk": 1,
    }, {
        "head": "UFW not installed",
        "desc": "The firewall rules for the system are managed using `iptables` which is more complicated to use than `ufw`.",
        "risk": 1,
    }, {
        "head": "IP6Tables not configured",
        "desc": "No rules have been configured in `ip6tables` which means that all services using IPv6 are open to the world.",
        "risk": 4,
    }, {
        "head": "DNS uses public search domain",
        "desc": "The DNS is configured to use a public domain as search domain for the local network which can lead to an information disclosure.",
        "risk": 2,
    }, {
        "head": "BIOS instead of UEFI",
        "desc": "The system is booting in BIOS mode instead of UEFI which means that secure boot cannot be enabled.",
        "risk": 1,
    }, {
        "head": "No harddrive encryption",
        "desc": "The harddrive of the machine is not encrypted which means that all files are readable to anyone with physical access to the machine.",
        "risk": 2,
    }, {
        "head": "Bootloader is not password protected",
        "desc": "GRUB2 is not password protected which means that anybody can boot into the system.",
        "risk": 1,
    }, {
        "head": "System entropy is lower as expected",
        "desc": "The system entropy is way lower than expected which can lead to weakens the randomness of generated numbers.",
        "risk": 3
    },
]


let number = START_AT;
for (let { desc, head, risk } of findings) {
    const template = `
### OS-${number++}: ${head}

**Severity: \\textcolor{${colors[risk]}}{ ${risks[risk]} }**

**Description:** ${desc}

**Suggested Remediation:**

---`
    console.log(template)
}


number = START_AT;
for (let { head, risk } of findings) {
    const template = `| \\rowcolor{${colors[risk]}}{OS-${number++}} | ${head} | ${risks[risk]} |`
    console.log(template)
}
